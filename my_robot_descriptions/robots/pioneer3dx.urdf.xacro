<?xml version="1.0"?>
<robot name="pioneer3dx"
  xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
  xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
  xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
  xmlns:xacro="http://ros.org/wiki/xacro"
  >


  <!-- ============================ -->
  <!-- BEGIN XACRO DEFINITIONS      -->
  <!-- ============================ -->

  <!-- Define PI -->
  <xacro:property name="PI" value="3.14159"/>

  <!-- Wheel moments of inertia -->
  <xacro:property name="IXX" value="0.012411765597"/>
  <xacro:property name="IYY" value="0.015218160428"/>
  <xacro:property name="IZZ" value="0.011763977943"/>
  <xacro:property name="IXY" value="0.0"           />
  <xacro:property name="IXZ" value="0.0"           />
  <xacro:property name="IYZ" value="0.0"           />

  <!-- Macro to create a wheel -->
  <xacro:macro name="WHEEL" params="name parent reflect">

    <!-- Wheel -->
    <link name="${name}_wheel">
      <inertial>
        <mass value="0.5"/>
        <origin xyz="0 0 0"/>
        <inertia ixx="${IXX}" iyy="${IYY}" izz="${IZZ}" ixy="${IXY}" ixz="${IXZ}" iyz="${IYZ}"/>
      </inertial>
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://p2os_urdf/meshes/p3dx_meshes/${name}_wheel.stl"/>
        </geometry>
        <material name="WheelBlack"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${-PI/2} 0 0"/>
        <geometry>
          <cylinder radius="0.09" length="0.01"/>
        </geometry>
      </collision>
    </link>
    <gazebo reference="${name}_wheel">
      <material value="Gazebo/Black"/>
      <elem key="mu1" value="0.5"/>
      <elem key="mu2" value="50.0"/>
      <elem key="kp"  value="100000000.0"/>
      <elem key="kd"  value="1.0"/>
    </gazebo>

    <!-- Hubcap -->
    <link name="${name}_hubcap">
      <inertial>
        <mass value="0.01"/>
        <origin xyz="0 0 0"/>
        <inertia ixx="${IXX}" iyy="${IYY}" izz="${IZZ}" ixy="${IXY}" ixz="${IXZ}" iyz="${IYZ}"/>
      </inertial>
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://p2os_urdf/meshes/p3dx_meshes/${name}_hubcap.stl"/>
        </geometry>
        <material name="HubcapYellow"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="0 0 0"/>
        </geometry>
      </collision>
    </link>
    <gazebo reference="${name}_hubcap">
      <material value="Gazebo/Yellow"/>
    </gazebo>

    <!-- Join wheel and hubcap -->
    <joint name="${name}_hubcap_joint" type="fixed">
      <parent link="${name}_wheel"/>
      <child link="${name}_hubcap"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint>

    <!-- Join wheel and base_link -->
    <joint name="${name}_wheel_joint" type="continuous">
      <parent link="base_link"/>
      <child link="${name}_wheel"/>
      <axis xyz="0 1 0"/>
      <limit effort="100" velocity="100"/>
      <joint_properties damping="0.0" friction="0.0"/>
      <origin xyz="0 ${reflect*0.158} 0.091" rpy="0 0 0"/>
    </joint>

    <!--
    <transmission name="${parent}_${name}_wheel_trans" type="pr2_mechanism_model/SimpleTransmission">
      <actuator name="${name}_wheel_motor"/>
      <joint name="${name}_wheel_joint"/>
      <mechanicalReduction>${reflect * 624/35 * 80/19}</mechanicalReduction>
    </transmission>
    -->

  </xacro:macro>

  <!-- ============================ -->
  <!-- END XACRO DEFINITIONS        -->
  <!-- ============================ -->


  <!-- Materials -->
  <material name="WheelBlack" >   <color rgba="0.117 0.117 0.117 1.0"/> </material>
  <material name="HubcapYellow">  <color rgba="1.000 0.811 0.151 1.0"/> </material>
  <material name="ChassisRed">    <color rgba="0.851 0.000 0.000 1.0"/> </material>
  <material name="TopBlack">      <color rgba="0.038 0.038 0.038 1.0"/> </material>
  <material name="SwivelGrey">    <color rgba="0.500 0.500 0.500 1.0"/> </material>
  <material name="SonarYellow">   <color rgba="0.715 0.583 0.210 1.0"/> </material>


  <!-- Base link -->
  <link name="base_link">
    <inertial>
      <mass value="3.5"/>
      <origin xyz="-0.05 0 0"/>
      <inertia ixx="1" ixy="0" ixz="0" iyy="1" iyz="0" izz="1"/>
    </inertial>
    <visual>
      <origin xyz="-0.045 0 0.148" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://p2os_urdf/meshes/p3dx_meshes/chassis.stl"/>
      </geometry>
      <material name="ChassisRed"/>
    </visual>
    <collision>
      <origin xyz="-0.045 0 0.145" rpy="0 0 0"/>
        <geometry>
          <box size="0.35 0.25 0.14"/>
        </geometry>
    </collision>
  </link>
  <gazebo reference="base_link">
    <material value="Gazebo/Red"/>
  </gazebo>

  <!-- Top plate -->
  <link name="top_plate">
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1" ixy="0" ixz="0" iyy="1" iyz="0" izz="1"/>
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://p2os_urdf/meshes/p3dx_meshes/top.stl"/>
      </geometry>
      <material name="TopBlack"/>
    </visual>
    <collision>
      <origin xyz="0.0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.45 0.38 0.01"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="top_plate">
    <material value="Gazebo/Black"/>
  </gazebo>

  <!-- Join top_plate and base_link -->
  <joint name="top_joint" type="fixed">
    <parent link="base_link"/>
    <child link="top_plate"/>
    <origin xyz="-0.045 0 0.234" rpy="0 0 0"/>
  </joint>

  <!-- Swivel -->
  <link name="swivel">
    <inertial>
      <mass value="0.1"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.01" ixy="0" ixz="0" iyy="0.01" iyz="0" izz="0.01"/>
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://p2os_urdf/meshes/p3dx_meshes/swivel.stl"/>
      </geometry>
      <material name="SwivelGrey"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0 0 0"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="swivel">
    <material value="Gazebo/Grey"/>
  </gazebo>

  <!-- Join swivel and base_link -->
  <joint name="swivel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="swivel"/>
    <origin xyz="-0.185 0 0.055" rpy="0 0 0"/>
    <axis xyz="0 0 1"/>
    <limit effort="100" velocity="100" k_velocity="0"/>
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>

  <!-- Center wheel -->
  <link name="center_wheel">
    <inertial>
      <mass value="0.1"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.012411765597" ixy="-0.000711733678" ixz="0.00050272983" iyy="0.015218160428" iyz="-0.000004273467" izz="0.011763977943"/>
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://p2os_urdf/meshes/p3dx_meshes/center_wheel.stl"/>
      </geometry>
      <material name="WheelBlack"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="${-PI/2.0} 0 0"/>
      <geometry>
        <cylinder radius="0.0375" length="0.01"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="center_wheel">
    <material value="Gazebo/Black"/>
    <elem key="mu1" value="10.0"/>
    <elem key="mu2" value="10.0"/>
    <elem key="kp"  value="1000000.0"/>
    <elem key="kd"  value="1.0"/>
  </gazebo>

  <!-- Join center_wheel and swivel -->
  <joint name="center_wheel_joint" type="continuous">
    <parent link="swivel"/>
    <child link="center_wheel"/>
    <origin xyz="-0.026 0 -0.016" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
    <limit effort="100" velocity="100" k_velocity="0"/>
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>

  <!-- Center hubcap -->
  <link name="center_hubcap">
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.012411765597" ixy="-0.000711733678" ixz="0.00050272983" iyy="0.015218160428" iyz="-0.000004273467" izz="0.011763977943"/>
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://p2os_urdf/meshes/p3dx_meshes/center_hubcap.stl"/>
      </geometry>
      <material name="SwivelGrey"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0 0 0"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="center_hubcap">
    <material value="Gazebo/Grey"/>
  </gazebo>

  <!-- Join center_wheel and center_hubcap -->
  <joint name="center_hubcap_joint" type="fixed">
    <parent link="center_wheel"/>
    <child link="center_hubcap"/>
    <origin xyz="-0.0035 0 -0.001" rpy="0 0 0"/>
  </joint>

  <!-- Front sonars -->
  <link name="front_sonar">
    <inertial>
      <mass value="0.0001"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1" ixy="0" ixz="0" iyy="1" iyz="0" izz="1"/>
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://p2os_urdf/meshes/p3dx_meshes/front_sonar.stl"/>
      </geometry>
      <material name="SonarYellow"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0 0 0"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="front_sonar">
    <material value="Gazebo/Yellow"/>
  </gazebo>

  <!-- Join front_sonar and base_link -->
  <joint name="front_sonar_joint" type="fixed">
    <parent link="base_link"/>
    <child link="front_sonar"/>
    <origin xyz="-0.198 0 0.208" rpy="0 0 0"/>
  </joint>

  <!-- Back sonars -->
  <link name="back_sonar">
    <inertial>
      <mass value="0.0001"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1" ixy="0" ixz="0" iyy="1" iyz="0" izz="1"/>
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://p2os_urdf/meshes/p3dx_meshes/back_sonar.stl"/>
      </geometry>
      <material name="SonarYellow"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0 0 0"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="back_sonar">
    <material value="Gazebo/Yellow"/>
  </gazebo>

  <!-- Join back_sonar and base_link -->
  <joint name="back_sonar_joint" type="fixed">
    <parent link="base_link"/>
    <child link="back_sonar"/>
    <origin xyz="0.109 0 0.209" rpy="0 0 0"/>
  </joint>

  <!-- Wheels -->
  <xacro:WHEEL name="left" parent="base_link" reflect="1"/>
  <xacro:WHEEL name="right" parent="base_link" reflect="-1"/>

  <!-- Controllers -->
  <gazebo>
    <controller:gazebo_ros_diffdrive_plugin
        name="gazebo_ros_diffdrive_plugin"
        plugin="libgazebo_ros_diffdrive_plugin.so"
        >
        <alwaysOn>true</alwaysOn>
        <update>100</update>
        <updateRate>100.0</updateRate>
        <leftJoint>left_wheel_joint</leftJoint>
        <rightJoint>right_wheel_joint</rightJoint>
        <wheelSeparation>0.39</wheelSeparation>
        <wheelDiameter>0.15</wheelDiameter>
        <torque>5</torque>
        <interface:position name="position_iface_0"/>
    </controller:gazebo_ros_diffdrive_plugin>

    <!-- controller:differential_position2d name="controller1">
      <update>100</update>
      <leftJoint>left_wheel_joint</leftJoint>
      <rightJoint>right_wheel_joint</rightJoint>
      <wheelSeparation>0.39</wheelSeparation>
      <wheelDiameter>0.15</wheelDiameter>
      <torque>5</torque>
      <interface:position name="position_iface_0"/>
    </controller:differential_position2d -->

    <!--
    <controller:gazebo_ros_p3d name="p3d_base_controller" plugin="libgazebo_ros_p3d.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>100.0</updateRate>
      <bodyName>base_link</bodyName>
      <topicName>pose_ground_truth</topicName>
      <gaussianNoise>0.01</gaussianNoise>
      <frameName>map</frameName>
      <xyzOffsets>0 0 0</xyzOffsets>
      <rpyOffsets>0 0 0</rpyOffsets>
      <interface:position name="p3d_base_position"/>
    </controller:gazebo_ros_p3d>
    -->
    <!-- this publishes empty joint_states due to no transmission, but
         triggering robot_state_puublisher to publish tf between fixed joints in erratic,
         (e.g. base_laser_link for the base_scan frame) -->
    <!--
    <controller:gazebo_ros_controller_manager name="gazebo_ros_controller_manager" plugin="libgazebo_ros_controller_manager.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>1000.0</updateRate>
      <interface:audio name="gazebo_ros_controller_manager_dummy_iface"/>
    </controller:gazebo_ros_controller_manager>
    -->
  </gazebo>

</robot>
