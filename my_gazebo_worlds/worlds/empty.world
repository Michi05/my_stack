<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from /home/klc/Code/skynetish.com/ros/stacks/my_stack/my_gazebo_worlds/worlds/empty.world.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<gazebo:world xmlns:body="http://playerstage.sourceforge.net/gazebo/xmlschema/#body" xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller" xmlns:gazebo="http://playerstage.sourceforge.net/gazebo/xmlschema/#gz" xmlns:geo="http://willowgarage.com/xmlschema/#geo" xmlns:geom="http://playerstage.sourceforge.net/gazebo/xmlschema/#geom" xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface" xmlns:joint="http://playerstage.sourceforge.net/gazebo/xmlschema/#joint" xmlns:model="http://playerstage.sourceforge.net/gazebo/xmlschema/#model" xmlns:param="http://playerstage.sourceforge.net/gazebo/xmlschema/#param" xmlns:physics="http://playerstage.sourceforge.net/gazebo/xmlschema/#physics" xmlns:renderable="http://playerstage.sourceforge.net/gazebo/xmlschema/#renderable" xmlns:rendering="http://playerstage.sourceforge.net/gazebo/xmlschema/#rendering" xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor" xmlns:ui="http://playerstage.sourceforge.net/gazebo/xmlschema/#ui" xmlns:window="http://playerstage.sourceforge.net/gazebo/xmlschema/#window" xmlns:xacro="http://www.ros.org/wiki/xacro" xmlns:xi="http://www.w3.org/2001/XInclude">
  <!-- ============================ -->
  <!-- BEGIN XACRO DEFINITIONS      -->
  <!-- ============================ -->
  <!-- Ground plane size in metres (both x and y) -->
  <!-- Range and height for each light -->
  <!-- Macro to create one point light at given position -->
  <!--
    Macro to create point lights distributed around the world.  This is just an easy way to get
    light everwhere.  If we could spawn lights we might choose to spawn lights as needed instead.
  -->
  <!-- ============================ -->
  <!-- END XACRO DEFINITIONS        -->
  <!-- ============================ -->
  <!-- General -->
  <thread>4</thread>
  <verbosity>5</verbosity>
  <!-- Physics -->
  <physics:ode>
    <!-- Gravity (m/s^2) -->
    <gravity>0.0 0.0 -9.8</gravity>
    <!-- Physics engine step duration (s) -->
    <stepTime>0.001</stepTime>
    <!-- Physics engine step parameters -->
    <stepType>quick</stepType>
    <stepIters>10.0</stepIters>
    <stepW>1.3</stepW>
    <!-- Constraint force mixing (stiffness) -->
    <cfm>1e-10</cfm>
    <!-- Error reduction parameter (damping) -->
    <erp>0.2</erp>
    <!-- Maximum velocity that a contact can generate (m/s) -->
    <contactMaxCorrectingVel>10.0</contactMaxCorrectingVel>
    <!-- Depth to which contacts may sink (m) -->
    <contactSurfaceLayer>0.005</contactSurfaceLayer>
  </physics:ode>
  <!-- Geographical origin -->
  <geo:origin>
    <lat>43.24355</lat>
    <lon>-5.776711</lon>
  </geo:origin>
  <!-- GUI -->
  <rendering:gui>
    <!-- GUI type, for now only fltk exists -->
    <type>fltk</type>
    <!-- GUI window size -->
    <size>480 320</size>
    <!-- GUI window position -->
    <pos>0 0</pos>
    <!-- GUI frames loaded initially -->
    <frames>
      <row height="100%">
        <camera width="100%">
          <xyz>0 0 10</xyz>
          <rpy>0 90 90</rpy>
        </camera>
      </row>
    </frames>
  </rendering:gui>
  <!-- Rendering settings -->
  <rendering:ogre>
    <!-- Ambient light -->
    <ambient>0.4 0.4 0.4 0.4</ambient>
    <sky>
      <material>Gazebo/CloudySky</material>
    </sky>
    <grid>false</grid>
    <maxUpdateRate>10</maxUpdateRate>
    <shadowTechnique>none</shadowTechnique>
    <shadows>false</shadows>
  </rendering:ogre>
  <!-- Ground -->
  <model:physical name="ground">
    <xyz>0.0 0.0 0.0</xyz>
    <rpy>0.0 0.0 0.0</rpy>
    <static>true</static>
    <body:plane name="ground_body">
      <geom:plane name="ground_geom">
        <laserRetro>2000.0</laserRetro>
        <mu1>50.0</mu1>
        <mu2>50.0</mu2>
        <kp>1000000000.0</kp>
        <kd>1.0</kd>
        <normal>0.0 0.0 1.0</normal>
        <size>100.0 100.0</size>
        <segments>10 10</segments>
        <uvTile>100.0 100.0</uvTile>
        <material>Gazebo/GrayGrid</material>
      </geom:plane>
    </body:plane>
  </model:physical>
  <!-- Lights -->
  <model:renderable name="light_1">
    <!-- Affected by gravity -->
    <enableGravity>false</enableGravity>
    <!-- Light pose (only needed for point or spot) -->
    <xyz>0 0 10.0</xyz>
    <rpy>0.0 0.0 0.0</rpy>
    <!-- Light parameters -->
    <light>
      <!-- Light type (point, directional, or spot) -->
      <type>point</type>
      <!-- Light direction vector (only for directional or spot) -->
      <direction>0.0 0.0 -1.0</direction>
      <!-- Spotlight parameters (only for spot) -->
      <innerAngle>10.0</innerAngle>
      <outerAngle>20.0</outerAngle>
      <falloff>1.0</falloff>
      <!-- Cast shadows -->
      <castShadows>true</castShadows>
      <!-- Diffuse colour (matte surfaces) in RGB ([0,1]) -->
      <diffuseColor>0.8 0.8 0.8</diffuseColor>
      <!-- Specular colour (glossy surfaces) in RGB ([0,1]) -->
      <specularColor>0.1 0.1 0.1</specularColor>
      <!-- Attenuation over range (constant, linear, quadratic) -->
      <attenuation>0.2 0.1 0.0</attenuation>
      <!-- Light range (m) -->
      <range>25.0</range>
    </light>
  </model:renderable>
  <model:renderable name="light_2">
    <!-- Affected by gravity -->
    <enableGravity>false</enableGravity>
    <!-- Light pose (only needed for point or spot) -->
    <xyz>25.0 25.0 10.0</xyz>
    <rpy>0.0 0.0 0.0</rpy>
    <!-- Light parameters -->
    <light>
      <!-- Light type (point, directional, or spot) -->
      <type>point</type>
      <!-- Light direction vector (only for directional or spot) -->
      <direction>0.0 0.0 -1.0</direction>
      <!-- Spotlight parameters (only for spot) -->
      <innerAngle>10.0</innerAngle>
      <outerAngle>20.0</outerAngle>
      <falloff>1.0</falloff>
      <!-- Cast shadows -->
      <castShadows>true</castShadows>
      <!-- Diffuse colour (matte surfaces) in RGB ([0,1]) -->
      <diffuseColor>0.8 0.8 0.8</diffuseColor>
      <!-- Specular colour (glossy surfaces) in RGB ([0,1]) -->
      <specularColor>0.1 0.1 0.1</specularColor>
      <!-- Attenuation over range (constant, linear, quadratic) -->
      <attenuation>0.2 0.1 0.0</attenuation>
      <!-- Light range (m) -->
      <range>25.0</range>
    </light>
  </model:renderable>
  <model:renderable name="light_3">
    <!-- Affected by gravity -->
    <enableGravity>false</enableGravity>
    <!-- Light pose (only needed for point or spot) -->
    <xyz>25.0 -25.0 10.0</xyz>
    <rpy>0.0 0.0 0.0</rpy>
    <!-- Light parameters -->
    <light>
      <!-- Light type (point, directional, or spot) -->
      <type>point</type>
      <!-- Light direction vector (only for directional or spot) -->
      <direction>0.0 0.0 -1.0</direction>
      <!-- Spotlight parameters (only for spot) -->
      <innerAngle>10.0</innerAngle>
      <outerAngle>20.0</outerAngle>
      <falloff>1.0</falloff>
      <!-- Cast shadows -->
      <castShadows>true</castShadows>
      <!-- Diffuse colour (matte surfaces) in RGB ([0,1]) -->
      <diffuseColor>0.8 0.8 0.8</diffuseColor>
      <!-- Specular colour (glossy surfaces) in RGB ([0,1]) -->
      <specularColor>0.1 0.1 0.1</specularColor>
      <!-- Attenuation over range (constant, linear, quadratic) -->
      <attenuation>0.2 0.1 0.0</attenuation>
      <!-- Light range (m) -->
      <range>25.0</range>
    </light>
  </model:renderable>
  <model:renderable name="light_4">
    <!-- Affected by gravity -->
    <enableGravity>false</enableGravity>
    <!-- Light pose (only needed for point or spot) -->
    <xyz>-25.0 25.0 10.0</xyz>
    <rpy>0.0 0.0 0.0</rpy>
    <!-- Light parameters -->
    <light>
      <!-- Light type (point, directional, or spot) -->
      <type>point</type>
      <!-- Light direction vector (only for directional or spot) -->
      <direction>0.0 0.0 -1.0</direction>
      <!-- Spotlight parameters (only for spot) -->
      <innerAngle>10.0</innerAngle>
      <outerAngle>20.0</outerAngle>
      <falloff>1.0</falloff>
      <!-- Cast shadows -->
      <castShadows>true</castShadows>
      <!-- Diffuse colour (matte surfaces) in RGB ([0,1]) -->
      <diffuseColor>0.8 0.8 0.8</diffuseColor>
      <!-- Specular colour (glossy surfaces) in RGB ([0,1]) -->
      <specularColor>0.1 0.1 0.1</specularColor>
      <!-- Attenuation over range (constant, linear, quadratic) -->
      <attenuation>0.2 0.1 0.0</attenuation>
      <!-- Light range (m) -->
      <range>25.0</range>
    </light>
  </model:renderable>
  <model:renderable name="light_5">
    <!-- Affected by gravity -->
    <enableGravity>false</enableGravity>
    <!-- Light pose (only needed for point or spot) -->
    <xyz>-25.0 -25.0 10.0</xyz>
    <rpy>0.0 0.0 0.0</rpy>
    <!-- Light parameters -->
    <light>
      <!-- Light type (point, directional, or spot) -->
      <type>point</type>
      <!-- Light direction vector (only for directional or spot) -->
      <direction>0.0 0.0 -1.0</direction>
      <!-- Spotlight parameters (only for spot) -->
      <innerAngle>10.0</innerAngle>
      <outerAngle>20.0</outerAngle>
      <falloff>1.0</falloff>
      <!-- Cast shadows -->
      <castShadows>true</castShadows>
      <!-- Diffuse colour (matte surfaces) in RGB ([0,1]) -->
      <diffuseColor>0.8 0.8 0.8</diffuseColor>
      <!-- Specular colour (glossy surfaces) in RGB ([0,1]) -->
      <specularColor>0.1 0.1 0.1</specularColor>
      <!-- Attenuation over range (constant, linear, quadratic) -->
      <attenuation>0.2 0.1 0.0</attenuation>
      <!-- Light range (m) -->
      <range>25.0</range>
    </light>
  </model:renderable>
</gazebo:world>

